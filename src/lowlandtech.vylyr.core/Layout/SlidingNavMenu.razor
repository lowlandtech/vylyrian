@inject AppVm App
@inject GraphContext Db

@if (App.CurrentNode != null)
{
    <MudPaper Class="menu-container">
        <div class="menu-panel-wrapper" style="transform: translateX(@(-100 * (App.NavStack.Count - 1))%);">
            @for (int i = 0; i < App.NavStack.Count; i++)
            {
                <MenuPanel 
                    CurrentNode="App.NavStack[i]"
                    OnNavigate="App.PushNode"
                    OnBack="App.PopNode"
                    OnClose="App.CloseDrawer"
                    ShowBack="@(i > 0)" />
            }
        </div>
    </MudPaper>
}
else
{
    <MudProgressCircular />
}

@code {

    protected override async Task OnInitializedAsync()
    {
        App.OnChange += ()=> InvokeAsync(StateHasChanged);
        App.OnMenuChange += ()=> InvokeAsync(StateHasChanged);
        await App.InitMenuAsync(Db);
    }

    public void Dispose()
    {
        App.OnChange -= () => InvokeAsync(StateHasChanged);
        App.OnMenuChange -= () => InvokeAsync(StateHasChanged);
    }

}