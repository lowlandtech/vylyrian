@using LowlandTech.Vylyr.Infrastructure.Enums
@inject AppVm App
@inject GraphContext Db

@if (App.CurrentNode is not null)
{
    <MudPaper Class="menu-container h-100">
        <div class="menu-panel-wrapper" style="transform: translateX(@(-100 * (App.NavStack.Count - 1))%);">
            @for (int i = 0; i < App.NavStack.Count; i++)
            {
                <MenuPanel 
                    CurrentNode="App.NavStack[i]"
                    OnNavigate="App.PushNode"
                    OnBack="App.PopNode"
                    ShowBack="@(i > 0)"
                    CurrentFooterMode="_footerMode"
                    OnResetFooter="ResetFooterMode"/>
            }
        </div>
        @if (_footerMode == FooterMode.None)
        {
            <MenuPanelActions OnFooterAction="SetFooterMode"
                              CurrentFooterMode="_footerMode"/>
        }

    </MudPaper>
}
else
{
    <MudProgressCircular />
}

@code {
    private FooterMode _footerMode = FooterMode.None;

    private void SetFooterMode(FooterMode mode)
    {
        _footerMode = mode;
    }

    private void ResetFooterMode()
    {
        _footerMode = FooterMode.None;
    }

    protected override async Task OnInitializedAsync()
    {
        App.OnChange += ()=> InvokeAsync(StateHasChanged);
        App.OnMenuChange += ()=> InvokeAsync(StateHasChanged);
        await App.InitMenuAsync(Db);
    }

    public void Dispose()
    {
        App.OnChange -= () => InvokeAsync(StateHasChanged);
        App.OnMenuChange -= () => InvokeAsync(StateHasChanged);
    }
}