@using LowlandTech.Vylyr.Infrastructure.Enums
@namespace LowlandTech.Vylyr.Layout

<MudPaper Class="menu-panel pa-0 h-100 d-flex flex-column" Elevation="0">

    <!-- Header -->
    <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Class="pl-1 pr-4 py-2">
        @if (ShowBack)
        {
            <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" OnClick="OnBack" />
        }
        else
        {
            <div></div>
        }
    </MudStack>

    <!-- Content -->
    <MudStack Class="flex-grow-1 overflow-auto">
        @if (Children == null)
        {
            <div class="d-flex justify-center pa-4">
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            </div>
        }
        else
        {
            <MudList T="GraphNodeWithCount">
                @foreach (var node in FilteredChildren)
                {
                    <MudSwipeArea OnSwipeEnd="e => HandleSwipeEnd(e, node)">
                        <MudListItem OnClick="() => TryNavigate(node)"
                                     Class="pl-4"
                                     Style="@GetListItemStyle(node)" Gutters="false">
                            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Class="w-100">
                                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                                    <MudIcon Icon="@node.Type.Icon" />
                                    <MudText Typo="Typo.body1">@node.Title</MudText>
                                </MudStack>
                                <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="1">
                                    @if (node.ChildCount > 0)
                                    {
                                        <MudBadge Content="@node.ChildCount" Color="Color.Primary" Class="@(App.IsMobile ? "mt-3 mr-11" : "mt-3 mr-2")" />
                                    }
                                    @if (!App.IsMobile && node.Type.AllowDeletion)
                                    {
                                        <MudMenu Icon="@Icons.Material.Filled.MoreVert"
                                                 Dense="true"
                                                 Size="Size.Small"
                                                 Class="p-1"
                                                 AnchorOrigin="Origin.TopRight"
                                                 TransformOrigin="Origin.TopRight">
                                            <MudMenuItem OnClick="() => ConfirmDelete(node)">
                                                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                                                    <MudIcon Icon="@Icons.Material.Filled.Delete" Size="Size.Small" />
                                                    <MudText>Delete</MudText>
                                                </MudStack>
                                            </MudMenuItem>
                                        </MudMenu>
                                    }
                                </MudStack>
                            </MudStack>
                        </MudListItem>
                    </MudSwipeArea>
                }
            </MudList>
        }
    </MudStack>

    <!-- Footer -->
    <MudStack Class="px-2 pt-2 pb-3 border-top" AlignItems="@(CurrentFooterMode == FooterMode.None ? AlignItems.End : AlignItems.Stretch)">
    @if (CurrentFooterMode == FooterMode.Filter)
    {
        <MudCard Class="@(_isHidingFooter ? $"{CardClasses} slide-out-bottom" : $"{CardClasses} slide-in-bottom")">
            <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
                <MudText Typo="Typo.subtitle1">Filter</MudText>
                <MudIconButton Icon="@Icons.Material.Filled.Close"
                               Size="Size.Small"
                               OnClick="Reset"/>
            </MudStack>
            <MudDivider/>
            <FilterNode OnFilterChanged="HandleFilterChanged" Node="_newNode"/>
        </MudCard>
    }
    else if (CurrentFooterMode == FooterMode.NewNode)
    {
        <MudCard Class="@(_isHidingFooter ? $"{CardClasses} slide-out-bottom" : $"{CardClasses} slide-in-bottom")">
            <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
                <MudText Typo="Typo.subtitle1">New item</MudText>
                <MudIconButton Icon="@Icons.Material.Filled.Close"
                               Size="Size.Small"
                               OnClick="Reset"/>
            </MudStack>
            <MudDivider/>
            <NewNode OnCreate="CreateNewNode"
                     NodeTypes="_availableTypes"
                     Node="_newNode"/>
        </MudCard>
    }
    </MudStack>

</MudPaper>
<style>
    @@keyframes slideInBottom {
        from {
            transform: translateY(20px);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .slide-in-bottom {
        animation: slideInBottom 0.25s ease-out;
    }

    @@keyframes slideOutBottom {
        from {
        transform: translateY(0);
        opacity: 1;
        }
        to {
            transform: translateY(20px);
            opacity: 0;
        }
    }

    .slide-out-bottom {
        animation: slideOutBottom 0.25s ease-in;
    }

</style>